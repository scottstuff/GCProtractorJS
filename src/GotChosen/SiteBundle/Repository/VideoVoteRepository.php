<?php

namespace GotChosen\SiteBundle\Repository;

use Doctrine\ORM\EntityRepository;
use GotChosen\SiteBundle\Entity\VideoVote;
use GotChosen\SiteBundle\Entity\Video;

/**
 * VideoVoteRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class VideoVoteRepository extends EntityRepository
{
    public function getVotesRemaining(Video $video, $ipAddress, $sessionId, \DateTime $day)
    {
        $q = $this->getEntityManager()->createQuery(
            'SELECT COUNT(v.id) FROM GotChosenSiteBundle:VideoVote v
             WHERE v.video = ?1 AND v.ip4Address = ?2 AND v.dtAdded BETWEEN ?3 AND ?4 AND v.sessionId = ?5'
        );
        $q->setParameter(1, $video->getId());
        $q->setParameter(2, $ipAddress);
        $q->setParameter(3, $day->format('Y-m-d 00:00:00'));
        $q->setParameter(4, $day->format('Y-m-d 23:59:59'));
        $q->setParameter(5, $sessionId);
        
        $sessionCount = $q->getSingleScalarResult();
        if ($sessionCount == 0)
        {
            $q = $this->getEntityManager()->createQuery(
                'SELECT COUNT(v.id) FROM GotChosenSiteBundle:VideoVote v
                 WHERE v.video = ?1 AND v.ip4Address = ?2 AND v.dtAdded BETWEEN ?3 AND ?4'
            );
            $q->setParameter(1, $video->getId());
            $q->setParameter(2, $ipAddress);
            $q->setParameter(3, $day->format('Y-m-d 00:00:00'));
            $q->setParameter(4, $day->format('Y-m-d 23:59:59'));
            $dayCount = $q->getSingleScalarResult();
            //return $dayCount;
            return max(0, VideoVote::MAX_PER_DAY - $dayCount);            
        }
        else 
        {
            return 0;
        }
        
    }
    
    public function hasVotedOnVideo(Video $video, $ipAddress, $sessionId, \DateTime $day)
    {
        $remaining = $this->getVotesRemaining($video, $ipAddress, $sessionId, $day);
        return $remaining < VideoVote::MAX_PER_DAY;
    }
    
    public function canVoteOnVideo(Video $video, $ipAddress, $sessionId, \DateTime $day)
    {
        return $this->getVotesRemaining($video, $ipAddress, $sessionId, $day) > 0;
    }
}
