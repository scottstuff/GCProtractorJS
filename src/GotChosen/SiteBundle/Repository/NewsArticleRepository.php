<?php

namespace GotChosen\SiteBundle\Repository;

use Doctrine\ORM\EntityRepository;
use GotChosen\SiteBundle\Entity\NewsCategory;

/**
 * NewsArticleRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class NewsArticleRepository extends EntityRepository
{
    public function getNumberOfArticles()
    {
        $query = $this->getEntityManager()->createQueryBuilder();
        $query->select('COUNT(a.id)')
            ->from('GotChosenSiteBundle:NewsArticle', 'a');

        return $query->getQuery()->getSingleScalarResult();
    }

    public function getNumberOfArticlesInCategory(NewsCategory $category)
    {
        $qb = $this->getEntityManager()->createQueryBuilder();
        $qb->select('COUNT(a.id)')
            ->from('GotChosenSiteBundle:NewsArticle', 'a')
            ->where('a.category = :category')
            ->andWhere('a.published = 1')
            ->andWhere('a.publishDate <= :today')
            ->setParameter('category', $category->getId())
            ->setParameter('today', date('Y-m-d 23:59:59'));

        return $qb->getQuery()->getSingleScalarResult();
    }

    public function getRecentArticles($numberOfArticles = 5, $category = null)
    {
        return $this->getArticles(0, $numberOfArticles, $category);
    }

    public function getArticles($offset = 0, $limit = 5, $category)
    {
        $qb = $this->getEntityManager()->createQueryBuilder();

        if ($category)
        {
            $qb->select('a', 'c')
                ->from('GotChosenSiteBundle:NewsArticle', 'a')
                ->join('a.category', 'c')
                ->where('a.category = :category')
                ->andWhere('a.published = 1')
                ->andWhere('a.publishDate <= :today')
                ->setParameter('category', $category->getId())
                ->setParameter('today', date('Y-m-d 23:59:59'))
                ->setFirstResult($offset)
                ->setMaxResults($limit)
                ->orderBy('a.publishDate', 'DESC');
        }
        else
        {
            $qb->select('a')
                ->from('GotChosenSiteBundle:NewsArticle', 'a')
                ->setFirstResult($offset)
                ->setMaxResults($limit)
                ->orderBy('a.publishDate', 'DESC');
        }

        return $qb->getQuery()->getResult();
    }
}
